/*07_복습*/

/*
 * GROUP BY 구문 : 집계 함수를 사용하여 값을 표시 
 */

SELECT DEPTNO, FLOOR(AVG(SAL)) AS AVG_SAL
FROM EMP
GROUP BY DEPTNO
;

SELECT
	JOB ,
	DEPTNO ,
	FLOOR(AVG(SAL)) AS AVG_SAL
FROM
	EMP
GROUP BY  -- 튜닝을 고려
	JOB ,
	DEPTNO     
ORDER BY	-- INDEX가 있는 JOB 컬럼부터 검색
	JOB , 		
	DEPTNO
;

SELECT *
FROM USER_INDEXES
WHERE TABLE_NAME = 'EMP'
;   -- INDEX 조회

-- HAVING 구문 사용
-- GROUP BY 결과에 대한 조건 설정
SELECT DEPTNO , JOB , FLOOR(AVG(SAL)) AS AVG_SAL
FROM EMP
GROUP BY JOB, DEPTNO       -- 튜닝을 고려
HAVING AVG(SAL) >= 2000
ORDER BY JOB, DEPTNO -- INDEX가 있는 JOB 컬럼부터 검색
;

-- LISTAGG, PIVOT, ROLLUP, CUBE, GROUPING SET
SELECT
	DEPTNO ,
	LISTAGG(ENAME, ',')    -- 해당값을 묶고 내림 차순.. 데이터를 한 칼럼에 담기                  
		WITHIN GROUP(ORDER BY SAL DESC) AS ENAME_LISTAGG
FROM EMP 
GROUP BY DEPTNO
;

SELECT
	DEPTNO,
	JOB,
	MAX(SAL)
FROM EMP
GROUP BY DEPTNO, JOB 
ORDER BY DEPTNO, JOB
;

SELECT *
FROM (SELECT DEPTNO, JOB, SAL FROM EMP)
PIVOT (MAX(SAL) FOR DEPTNO IN (10,20,30))
ORDER BY JOB
; 

SELECT
	DEPTNO
		,
	MAX(DECODE(JOB, 'CLERK', SAL)) AS 'CLERK'
		,
	MAX(DECODE(JOB, 'SALESMAN', SAL)) AS 'SALES'
		,
	MAX(DECODE(JOB, 'PRESIDENT', SAL)) AS 'PRESI'
		,
	MAX(DECODE(JOB, 'MANAGER', SAL)) AS 'MGR'
		,
	MAX(DECODE(JOB, 'ANALYST', SAL)) AS 'ANA'
FROM
	EMP
GROUP BY
	DEPTNO
ORDER BY
	DEPTNO
;

SELECT DEPTNO , JOB , COUNT(EMPNO) , MAX(SAL) , SUM(SAL) , AVG(SAL)
FROM EMP GROUP BY ROLLUP(DEPTNO, JOB);   -- ROLLUP 기준으로 그룹화
SELECT DEPTNO , JOB , COUNT(EMPNO) , MAX(SAL) , SUM(SAL) , AVG(SAL)
FROM EMP GROUP BY CUBE(DEPTNO, JOB)
ORDER BY DEPTNO, JOB; -- CUBE 삼차원.   표를 다차원 그룹화

-- GROUPING SETS 함수 :: 그룹화 집계 함수의 결과와 동일  
-- ROLLUP, CUBE 함수 집계 결과가 잘 되었는지 점검
SELECT DEPTNO , JOB, COUNT(EMPNO) 
FROM EMP
GROUP BY GROUPING SETS(DEPTNO, JOB)
ORDER BY DEPTNO, JOB;  


--GROUPING ID 함수  :: -- ROLLUP, CUBE 함수 집계 결과가 잘 되었는지 확인하기 위한 용도 // 하나 이상의 컬럼을 동시에 지정
SELECT
	DEPTNO,
	JOB,
	COUNT(*),
	MAX(SAL),
	SUM(SAL),
	AVG(SAL),
	GROUPING(DEPTNO),
	GROUPING(JOB),
	GROUPING_ID(DEPTNO, JOB) 	
FROM
	EMP
GROUP BY
	CUBE(DEPTNO, JOB)
ORDER BY
	DEPTNO,
	JOB
	;