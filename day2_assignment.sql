-- day2_assignment

/*Q2-1
 * (1) 테이블 
 * (2) 외래 키(FK, FOREIGN KEY) 
 * (3) 널(NULL)
 * 
 * Q2-2
 * (1) 문자셋(CharacterSet)   
 * (2) 문자셋(CharSet)
 * 
 * Q2-3
 * (1) VARCHAR2 
 * (2) CHAR
 * 
 * 
 * Q2-4
 * (1) 제약 조건
 * (2) 기본키 (PK)
 * (3) 외래키 (FK)
 * 
 * Q2-5
 * (1) 무결성
 * (2) 무결성
 * (3) 무결성
 * 
 * Q2-6
 * (1) UNIQUE 
 * (2) NOT NULL 
 * (3) INDEX
 */
 
-- 실습과제 1
SELECT DEPTNO, ROUND(AVG(SAL), 0) AS AVG_SAL, MAX(SAL) AS MAX_SAL, MIN(SAL) AS MIN_SAL, COUNT(SAL) AS CNT
FROM EMP
GROUP BY DEPTNO;

SELECT JOB
	, COUNT(*)
FROM EMP
GROUP BY JOB
HAVING COUNT(JOB) >=3
;

SELECT
	TO_CHAR(HIREDATE, 'YYYY') AS HIRE_YEAR
	, DEPTNO
	, COUNT(DEPTNO)
FROM EMP
GROUP BY TO_CHAR(HIREDATE, 'YYYY'), DEPTNO;

--실습과제 2
SELECT
	CASE
		WHEN COMM IS NOT NULL THEN 'Y'
		ELSE 'N'
	END AS EXIST_COMM,
	COUNT(*) AS CNT
FROM
	EMP
GROUP BY
	CASE
		WHEN COMM IS NOT NULL THEN 'Y'
		ELSE 'N'
	END;

SELECT
	DEPTNO ,
	TO_CHAR(HIREDATE, 'YYYY') AS HIRE_YEAR ,
	COUNT(DEPTNO),
	MAX(SAL),
	SUM(SAL),
	AVG(SAL)
FROM
	EMP
GROUP BY
	ROLLUP (DEPTNO,
	TO_CHAR(HIREDATE, 'YYYY'))
ORDER BY
	DEPTNO,
	HIRE_YEAR
;

--실습과제 3

--오라클 문법
SELECT 
	D.DEPTNO
	, D.DNAME 
	, E.EMPNO  
	, E.ENAME 
	, E.SAL
FROM
	EMP e,
	DEPT d
WHERE
	E.DEPTNO = D.DEPTNO
	AND SAL > 2000
;

-- 표준SQL 문법
SELECT 
	D.DEPTNO
	, D.DNAME 
	, E.EMPNO  
	, E.ENAME 
	, E.SAL
FROM EMP e JOIN DEPT d
		ON (E.DEPTNO = D.DEPTNO AND SAL > 2000)
;

-- NATURAL JOIN 활용    
SELECT 
	DEPTNO,
	DNAME,
	ROUND(NVL(AVG(e.SAL), 0), 0) AS AVG_SAL,
	NVL(MAX(e.SAL), 0) AS MAX_SAL,
	NVL(MIN(e.SAL), 0) AS MIN_SAL,
	COUNT(e.EMPNO) AS CNT
FROM
	EMP e
NATURAL JOIN DEPT
GROUP BY
	DEPTNO,
	DNAME;
-- NATURAL JOIN에서는 열(column)에 테이블 별칭(alias)이나 테이블명을 명시한 경우 오류 발생


-- INNER JOIN 활용
SELECT
	d.DEPTNO,
	d.DNAME,
	ROUND(NVL(AVG(e.SAL), 0), 0) AS AVG_SAL,
	NVL(MAX(e.SAL), 0) AS MAX_SAL,
	NVL(MIN(e.SAL), 0) AS MIN_SAL,
	COUNT(e.EMPNO) AS CNT
FROM
	EMP e
INNER JOIN DEPT d
ON
	e.DEPTNO = d.DEPTNO
GROUP BY
	d.DEPTNO,
	d.DNAME
;

-- 실습과제 4

SELECT
	d.DEPTNO
	, d.DNAME 
	, e.EMPNO 
	, e.ENAME 
	, e.JOB 
	, e.SAL 
FROM EMP e, DEPT d
WHERE E.DEPTNO(+) = D.DEPTNO
ORDER BY E.DEPTNO
;

SELECT
	D.DEPTNO ,
	D.DNAME ,
	E1.EMPNO ,
	E1.ENAME ,
	E1.MGR ,
	E1.SAL ,
	E1.DEPTNO ,
	S.LOSAL ,
	S.HISAL ,
	S.GRADE ,
	E2.EMPNO AS MGR_EMPNO ,
	E2.ENAME AS MGR_ENAME
FROM
	EMP e1
RIGHT JOIN DEPT d 
	ON
	e1.DEPTNO = d.DEPTNO
LEFT OUTER JOIN SALGRADE s 
	ON
	(E1.SAL >= s.LOSAL
		AND e1.SAL <= S.HISAL)
LEFT OUTER JOIN EMP e2 
	ON
	(E1.MGR = E2.EMPNO)
ORDER BY
	d.DEPTNO,
	e1.EMPNO 
;

-- 실습과제 5
SELECT
	e.JOB ,
	e.EMPNO ,
	e.ENAME ,
	e.SAL ,
	d.DEPTNO ,
	d.DNAME
FROM
	EMP e ,
	DEPT d
WHERE
	e.JOB = 'SALESMAN'
	AND d.DEPTNO = 30
;

SELECT
	E1.EMPNO
		,
	E1.ENAME
		,
	D.DNAME
		,
	e1.HIREDATE 
		,
	D.LOC
		,
	e1.SAL 
		,
	s.GRADE
FROM
	EMP e1,
	DEPT d,
	SALGRADE s
WHERE
	E1.DEPTNO = D.DEPTNO
	AND E1.SAL > (
	SELECT
		AVG(SAL)
	FROM
		EMP)
	AND E1.SAL >= s.LOSAL(+)
	AND e1.SAL <= S.HISAL(+)
ORDER BY
	E1.SAL DESC
;

--실습과제 6
SELECT
	E.EMPNO ,
	E.ENAME ,
	E.JOB ,
	d.DEPTNO ,
	d.DNAME ,
	d.LOC
FROM
	EMP e,
	DEPT d
WHERE
	e.DEPTNO = 10
	AND e.DEPTNO = d.DEPTNO (+)
	AND NOT EXISTS (
	SELECT
		1
	FROM
		EMP e2
	LEFT JOIN DEPT d2 ON
		e2.DEPTNO = d2.DEPTNO
	WHERE
		e2.DEPTNO = 30
		AND e2.JOB = e.JOB)
;

SELECT
	e.EMPNO ,
	e.ENAME ,
	e.SAL ,
	s.GRADE
FROM
	EMP e
JOIN SALGRADE s ON
	e.SAL > (
	SELECT
		MAX(SAL)
	FROM
		EMP
	WHERE
		JOB = 'SALESMAN'
				)
WHERE
	e.SAL BETWEEN s.LOSAL AND s.HISAL
ORDER BY
	e.EMPNO
;

SELECT
	e.EMPNO ,
	e.ENAME ,
	e.SAL ,
	s.GRADE
FROM
	EMP e
JOIN SALGRADE s ON
	e.SAL > ALL (
	SELECT
		SAL
	FROM
		EMP
	WHERE
		JOB = 'SALESMAN'
				)
WHERE
	e.SAL BETWEEN s.LOSAL AND s.HISAL
ORDER BY
	e.EMPNO
;
